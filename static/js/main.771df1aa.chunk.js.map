{"version":3,"sources":["component/radar.js","component/expand.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["data","labels","defaultFontColor","datasets","label","backgroundColor","borderColor","borderWidth","pointHoverBackgroundColor","pointHoverBorderColor","options","responsive","legend","display","boxWidth","animation","animateScale","animateRotate","scale","pointLabels","fontColor","fontFamily","fontSize","fontWeight","RadarData","react_default","a","createElement","className","es","Component","content","title","text","Expand","dist_modules","map","item","expandedClassName","expanded","itembis","App","src","logo","alt","radar","expand","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.771df1aa.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Radar} from 'react-chartjs-2';\nconst data = {\n  labels: ['RC pro', 'Prévoyance', 'Mutuelle', 'Cyber-sécurité', 'Local Pro', 'Matériel', 'Protection Juridique'],\n  defaultFontColor: '#FFF',\n  datasets: [\n    {\n      label: 'RPC',\n      backgroundColor: 'rgba(6,133,135,0.2)',\n      borderColor: 'rgba(6,133,135,1)',\n      borderWidth: 0.5,\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(6,133,135,1)',\n      data: [65, 59, 90, 81, 56, 55, 40]\n    },\n    {\n      label: 'Vous',\n      backgroundColor: 'rgba(247,162,65,0.2)',\n      borderColor: 'rgba(247,162,65,1)',\n      borderWidth: 0.5,\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(247,162,65,1)',\n      data: [28, 48, 40, 19, 96, 27, 100]\n    }\n  ]\n};\nconst options = {\n  responsive: true,\n  legend: {\n    display: false,\n    labels: {\n      boxWidth:15\n    }\n    \n  },\n \n  animation: {\n      animateScale: true,\n      animateRotate: true\n  },\n  scale: {\n      // ticks: {\n      //     backdropColor: 'red',\n      //     // Include a dollar sign in the ticks\n      //     callback: function(value, index, values) {\n      //         return '$' + value;\n      //     }\n      // }\n      pointLabels: {\n          // callback: function(value, index, values) {\n          //     return '$' + value;\n          // }\n          fontColor: 'rgba(247,162,65,1)',\n          fontFamily: \"Helvetica', 'Arial', sans-serif\",\n          fontSize: 10,\n          fontWeight: 600\n      },\n  },\n};\nclass RadarData extends Component {\n\n  render() {\n\n    return (\n      <div className=\"radar_content\">\n        <Radar data={data} options={options}/>\n      </div>\n    );\n  }\n};\n\n\nexport default RadarData;\n","import React, { Component } from 'react';\nimport { Accordion, AccordionItem } from 'react-sanfona';\n\nconst data = [\n      {\n        label: 'RC pro',\n        content: [\n            {\n                title: 'sub1',\n                text: 'text1'\n            },\n            {\n                title: 'sub2',\n                text: 'text2'  \n            }\n        ]\n      },\n      {\n        label: 'Prévoyance',\n        content: [\n            {\n                title: '',\n                text: ''\n            }\n        ]\n      },\n      {\n        label: 'Mutuelle',\n        content: [\n            {\n                title: 'sub1',\n                text: 'text1'\n            },\n            {\n                title: 'sub2',\n                text: 'text2'  \n            }\n        ]\n      },\n      {\n        label: 'Cyber-sécurité',\n        content: [\n            {\n                title: '',\n                text: ''\n            }\n        ]\n      },\n      {\n        label: 'Local Pro',\n        content: [\n            {\n                title: '',\n                text: ''\n            }\n        ]\n      },\n      {\n        label: 'Matériel',\n        content: [\n            {\n                title: '',\n                text: ''\n            }\n        ]\n      },\n      {\n        label: 'Protection Juridique',\n        content: [\n            {\n                title: '',\n                text: ''\n            }\n        ]\n      }\n    ];\n\n\nclass Expand extends Component {\n    render() {\n      return (\n        <Accordion className=\"expand\">\n        {data.map(item => {\n          return (\n            <AccordionItem  className=\"list_title\" expandedClassName=\"list_title-open\" title={item.label} expanded={item.label === 'RC pro'}>\n              <div className=\"white_content\">\n                <Accordion className=\"subexpand\">\n                    {item.content.map(itembis => {\n                    return (\n                        <AccordionItem className=\"sublist_title\" expandedClassName=\"sublist_title-open\" title={itembis.title}>\n                        <div className=\"subtext\">\n                            {itembis.text}\n                        </div>\n                        </AccordionItem>\n                    );\n                    })}\n                </Accordion>\n              </div>\n            </AccordionItem>\n          );\n        })}\n      </Accordion>\n      );\n    }\n  }\n  \n  export default Expand;\n  ","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './styles/App.scss';\nimport Radar from './component/radar'\nimport Expand from './component/expand';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} alt=\"logo\"/>\n          \n        </header>\n        <div className=\"App-content\">\n        <h1>RAPPORT</h1>\n          <Radar/>\n          <Expand/>\n        </div>\n       \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5019d20f.svg\";"],"sourceRoot":""}